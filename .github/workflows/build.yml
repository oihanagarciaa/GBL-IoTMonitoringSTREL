# Building workflow for moonlight
name: Build
on: [push, pull_request]

jobs:
  build:
    name: Build & Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Grant execute permission for gradlew
      working-directory: ${{runner.workspace}}/GBL-IoTMonitoringSTREL/MoonlightMiddleware
      run: chmod +x gradlew
      
    - name: Build with Gradle
      working-directory: ${{runner.workspace}}/GBL-IoTMonitoringSTREL/MoonlightMiddleware
      run: ./gradlew build
    
    # Tests running and static code analysis
    - name: Gradle check
      working-directory: ${{runner.workspace}}/GBL-IoTMonitoringSTREL/MoonlightMiddleware
      run: ./gradlew check

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build and analyze
      working-directory: ${{runner.workspace}}/GBL-IoTMonitoringSTREL/MoonlightMiddleware
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew analyze
